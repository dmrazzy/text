(declare-rel function_f_25_0 (Int))
(declare-rel constructor_Loop_26_0 ())
(declare-rel error_1 ())
(declare-rel loop_header_17_0 (Int Int))
(declare-rel function_f_25_1 (Int))
(declare-rel loop_body_16_0 (Int Int))
(declare-rel block_24_1 (Int Int))
(declare-rel block_24_0 (Int Int))
(declare-rel interface_Loop_26_0 ())
(declare-var A Int)
(declare-var B (Array Int Int))
(declare-var C Int)
(declare-var D Int)
(declare-var E Int)
(declare-var F Int)
(declare-var G Bool)
(declare-var H Int)
(declare-var I Int)
(declare-var J Int)
(declare-var K Bool)
(declare-var L Int)
(declare-var M Int)
(rule (! constructor_Loop_26_0 :named constructor_Loop_26))
(rule (! (=> (and constructor_Loop_26_0 true true) interface_Loop_26_0) :named constructor_Loop_26_0_to_interface_Loop_26_0))
(rule (! (=> (and interface_Loop_26_0 true true) (function_f_25_0 C)) :named interface_Loop_26_0_to_function_f_25_0))
(rule (! (=> (and (function_f_25_0 C) true true) (block_24_0 C A)) :named function_f_25_0_to_block_24_0))
(rule (! (=> (and (block_24_0 D C)
         (= A F)
         (= F 0)
         (<= D
             115792089237316195423570985008687907853269984665640564039457584007913129639935)
         (>= D 0)
         (= C 0)
         true
         true
         true)
    (loop_header_17_0 D A)) :named block_24_0_to_loop_header_17_0))
(rule (! (=> (and (loop_header_17_0 D C) (= G (< I H)) (= H D) (= I C) true G)
    (loop_body_16_0 D C)) :named loop_header_17_0_to_loop_body_16_0))
(rule (! (=> (and (loop_header_17_0 D C) (= G (< I H)) (= H D) (= I C) true (not G))
    (block_24_1 D C)) :named loop_header_17_0_to_block_24_1))
(rule (! (=> (and (loop_body_16_0 D C) (= A (+ C 1)) (= H (+ C 1)) true true)
    (loop_header_17_0 D A)) :named loop_body_16_0_to_loop_header_17_0))
(rule (! (=> (and (block_24_1 D C) (= G (= I H)) (= H D) (= I C) true true (not G))
    error_1) :named block_24_1_to_error_1))
(rule (! (=> (and (block_24_1 D C) (=> true G) (= G (= I H)) (= H D) (= I C) true true)
    (function_f_25_1 D)) :named block_24_1_to_function_f_25_1))
(rule (! (=> (and (function_f_25_1 D) true true) interface_Loop_26_0) :named function_f_25_1_to_interface_Loop_26_0))

(query error_1 :print-certificate true)
